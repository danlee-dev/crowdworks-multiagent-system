version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: crowdworks_db
    environment:
      POSTGRES_USER: crowdworks_user
      POSTGRES_PASSWORD: 2025
      POSTGRES_DB: crowdworks_db
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432"
    networks:
      - crowdworks-network

  # Elasticsearch with Korean Analysis Plugin
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: es-demo
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - crowdworks-network
    command: >
      bash -c "
        bin/elasticsearch-plugin list | grep -q analysis-nori || bin/elasticsearch-plugin install analysis-nori --batch;
        exec bin/elasticsearch
      "

  # Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana-demo
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=y4Y+qtP5m9PPdAd3HtS2
      - xpack.security.enabled=true
      - server.ssl.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - crowdworks-network

  # Neo4J
  neo4j:
    image: neo4j:5
    container_name: neo4j
    restart: unless-stopped
    ports:
      - "127.0.0.1:7474:7474"
      - "127.0.0.1:7687:7687"
      - "127.0.0.1:7473:7473"
    volumes:
      - neo4j_data_original:/data
      - ./Neo4J/import:/import
      - ./Neo4J/plugins:/plugins
      - ./Neo4J/logs:/logs
    environment:
      NEO4J_AUTH: "neo4j/#cwp2025!"
      NEO4JLABS_PLUGINS: '["apoc","graph-data-science"]'
      NEO4J_dbms_security_procedures_unrestricted: "gds.*,apoc.*"
      NEO4J_dbms_security_procedures_allowlist: "gds.*,apoc.*"
      NEO4J_server_directories_import: "/import"
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_import_file_use__neo4j__config: "true"
    networks:
      - crowdworks-network

  # Neo4J App
  neo4j-app:
    build: ./Neo4J/app
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: "#cwp2025!"
    depends_on:
      - neo4j
    networks:
      - crowdworks-network

  # Crawler RDB
  crawler-rdb:
    build: ./crawler_rdb
    container_name: crawler_kamis
    env_file:
      - ./crawler_rdb/.env
    depends_on:
      - postgres
    volumes:
      - ./crawler_rdb:/app
    restart: "no"
    networks:
      - crowdworks-network

  # Main Application Backend
  backend:
    build: ./multiagent-rag-system/backend
    container_name: multiagent-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./multiagent-rag-system/backend/app:/app/app
      - ./multiagent-rag-system/backend/.env:/app/.env
      - ./logs:/app/logs
      - ./utils:/app/utils
    working_dir: /app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - NEO4J_URI=bolt://neo4j:7687
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    env_file:
      - ./multiagent-rag-system/backend/.env
    depends_on:
      - postgres
      - elasticsearch
      - neo4j
    networks:
      - crowdworks-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build: ./multiagent-rag-system/frontend
    container_name: multiagent-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./multiagent-rag-system/frontend:/app
      - /app/node_modules
    working_dir: /app
    depends_on:
      - backend
    networks:
      - crowdworks-network
    command: npm run dev
    stdin_open: true
    tty: true

volumes:
  elasticsearch_es_data:
    external: true
  neo4j_data_original:
    external: true

networks:
  crowdworks-network:
    driver: bridge